// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Index() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<html><head><title>Classifier</title><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><script>\n\t\t\t\tasync function classify(event) {\n\t\t\t\t\tevent.preventDefault();\n\n\t\t\t\t\tconst name = document.getElementById(\"name\").value;\n\t\t\t\t\tconst language = document.getElementById(\"language\").value;\n\t\t\t\t\tconst country = document.getElementById(\"country\").value;\n\t\t\t\t\tconst resultBox = document.getElementById(\"result\");\n\n\t\t\t\t\tresultBox.innerHTML = \"<em>Classifying...</em>\";\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst response = await fetch(\"http://localhost:8080/v1/classify\", {\n\t\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\t\t\t\tbody: JSON.stringify({ name, language, country }),\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (!response.ok) {\n\t\t\t\t\t\t\tthrow new Error(\"Backend error: \" + response.status);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst data = await response.json();\n\n\t\t\t\t\t\tif (data.result && data.result.features) {\n\t\t\t\t\t\t\trenderFeatures(data.result, resultBox);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresultBox.innerText = \"Unexpected response: \" + JSON.stringify(data);\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tconsole.error(err);\n\t\t\t\t\t\tresultBox.innerText = \"Error: \" + err.message;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfunction renderFeatures(result, container) {\n\t\t\t\t\tcontainer.innerHTML = `\n\t\t\t\t\t\t<h3>Result for:<br><strong>Name: ${result.name}</strong><br><strong>Language: ${result.language}</strong><br><strong>Country: ${result.country}</strong></h3>\n\t\t\t\t\t\t<div class=\"features\"></div>\n\t\t\t\t\t`;\n\n\t\t\t\t\tconst featuresDiv = container.querySelector(\".features\");\n\t\t\t\t\tresult.features.forEach(f => {\n\t\t\t\t\t\tconst color = getBarColor(f.score);\n\t\t\t\t\t\tconst bar = document.createElement(\"div\");\n\t\t\t\t\t\tbar.classList.add(\"feature-bar\");\n\t\t\t\t\t\tbar.innerHTML = `\n\t\t\t\t\t\t\t<div class=\"label\">${f.category} (${f.score}%)</div>\n\t\t\t\t\t\t\t<div class=\"bar-container\">\n\t\t\t\t\t\t\t\t<div class=\"bar-fill\" style=\"width: ${f.score}%; background-color: ${color};\"></div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t`;\n\t\t\t\t\t\tfeaturesDiv.appendChild(bar);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tfunction getBarColor(score) {\n\t\t\t\t\t// Gradient from red (0) → yellow (50) → green (100)\n\t\t\t\t\tconst r = score < 50 ? 255 : Math.round(255 - (score - 50) * 5.1);\n\t\t\t\t\tconst g = score > 50 ? 255 : Math.round(score * 5.1);\n\t\t\t\t\treturn `rgb(${r}, ${g}, 100)`;\n\t\t\t\t}\n\t\t\t</script><style>\n\t\t\t\tbody {\n\t\t\t\t\tfont-family: sans-serif;\n\t\t\t\t\tbackground: #f6f8fa;\n\t\t\t\t\tmargin: 0;\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tjustify-content: center;\n\t\t\t\t}\n\n\t\t\t\t.container {\n\t\t\t\t\tbackground: white;\n\t\t\t\t\tpadding: 2rem 2.5rem;\n\t\t\t\t\tborder-radius: 10px;\n\t\t\t\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n\t\t\t\t\tmax-width: 420px;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\ttext-align: center;\n\t\t\t\t\tmargin-top: 50px;\n\t\t\t\t}\n\n\t\t\t\th1 {\n\t\t\t\t\tmargin-bottom: 1.5rem;\n\t\t\t\t\tfont-size: 1.5rem;\n\t\t\t\t}\n\n\t\t\t\tform label {\n\t\t\t\t\tdisplay: block;\n\t\t\t\t\tmargin-top: 10px;\n\t\t\t\t\tmargin-bottom: 4px;\n\t\t\t\t\ttext-align: left;\n\t\t\t\t}\n\n\t\t\t\tinput, select, button {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tmax-width: 250px;\n\t\t\t\t\tpadding: 10px;\n\t\t\t\t\tmargin: 4px auto;\n\t\t\t\t\tborder: 1px solid #ccc;\n\t\t\t\t\tborder-radius: 6px;\n\t\t\t\t\tdisplay: block;\n\t\t\t\t}\n\n\t\t\t\tbutton {\n\t\t\t\t\tbackground: #007bff;\n\t\t\t\t\tcolor: white;\n\t\t\t\t\tcursor: pointer;\n\t\t\t\t\tfont-weight: bold;\n\t\t\t\t\tmargin-top: 12px;\n\t\t\t\t}\n\n\t\t\t\tbutton:hover {\n\t\t\t\t\tbackground: #0056b3;\n\t\t\t\t}\n\n\t\t\t\t#result {\n\t\t\t\t\tmargin-top: 1.5rem;\n\t\t\t\t\ttext-align: left;\n\t\t\t\t\tbackground: #f9f9f9;\n\t\t\t\t\tpadding: 12px;\n\t\t\t\t\tborder-radius: 6px;\n\t\t\t\t\tmin-height: 2em;\n\t\t\t\t}\n\n\t\t\t\t.feature-bar {\n\t\t\t\t\tmargin: 10px 0;\n\t\t\t\t}\n\n\t\t\t\t.label {\n\t\t\t\t\tfont-size: 0.9rem;\n\t\t\t\t\tmargin-bottom: 4px;\n\t\t\t\t}\n\n\t\t\t\t.bar-container {\n\t\t\t\t\tbackground: #ddd;\n\t\t\t\t\tborder-radius: 6px;\n\t\t\t\t\theight: 16px;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\toverflow: hidden;\n\t\t\t\t}\n\n\t\t\t\t.bar-fill {\n\t\t\t\t\theight: 100%;\n\t\t\t\t\ttransition: width 0.6s ease, background-color 0.6s ease;\n\t\t\t\t}\n\t\t\t</style></head><body><div class=\"container\"><h1>ANEMONE: Name Classifier</h1><form onsubmit=\"classify(event)\"><label for=\"name\">Name</label> <input id=\"name\" name=\"name\" type=\"text\" required> <label for=\"language\">Language</label> <select id=\"language\"><option value=\"portuguese\">Portuguese</option> <option value=\"english\">English</option> <option value=\"spanish\">Spanish</option></select> <label for=\"country\">Country</label> <select id=\"country\"><option value=\"br\">Brazil</option> <option value=\"us\">USA</option> <option value=\"es\">Spain</option></select> <button type=\"submit\">Classify</button></form><div id=\"result\">(No result yet)</div></div></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
